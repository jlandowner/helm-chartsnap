['Helm test mocks should execute as helm cmd 1']
SnapShot = ''

['Helm when Execute should execute with expected args and env 1']
SnapShot = """
Arguments for helm: template aaa ccc --namespace=bbb --values=ddd
Environment variables starting with HELM_:
HELM_DEBUG=false
"""

['Helm when Execute with additional args should execute with expected args and env 1']
SnapShot = """
Arguments for helm: template chartsnap postgres --namespace=xxx --values=postgres.values.yaml --repo https://charts.bitnami.com/bitnami --skip-tests
Environment variables starting with HELM_:
HELM_DEBUG=false
"""

['Helm when Execute with post-renderer output containing multiline strings should execute with expected output 1']
SnapShot = """
---
# Source: test-chart/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-secret
stringData:
  certificate: \"-----BEGIN CERTIFICATE-----
MIIDXTCCAkWgAwIBAgIJAKZ
-----END CERTIFICATE-----\"
---
# Source: test-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-config
data:
  message: \"hello world\"
"""

['Helm when Execute without namespace should execute with expected args and env 1']
SnapShot = """
Arguments for helm: template chartsnap charts/app1/ --values=charts/app1/test/test.values.yaml
Environment variables starting with HELM_:
HELM_DEBUG=false
"""

['Helm when Execute without values should execute with expected args and env 1']
SnapShot = """
Arguments for helm: template chartsnap charts/app1/ --namespace=default
Environment variables starting with HELM_:
HELM_DEBUG=false
"""
